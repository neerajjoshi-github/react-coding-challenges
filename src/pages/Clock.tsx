import { useEffect, useState } from "react";

const d = new Date();
const formatter = new Intl.DateTimeFormat("en-UK", {
  dateStyle: "full",
});
const size = 320;
const radius = 320 - 160;
const center = size / 2;
const markerLength = 14;
const markerWidth = 2;

// Generated by Chat GPT
const markers = Array.from({ length: 12 }).map((_, index) => {
  const angle = (index * Math.PI * 2) / 12;
  const startX = center + radius * Math.cos(angle);
  const startY = center + radius * Math.sin(angle);
  const endX = center + (radius - markerLength) * Math.cos(angle);
  const endY = center + (radius - markerLength) * Math.sin(angle);

  return (
    <line
      key={index}
      x1={startX}
      y1={startY}
      x2={endX}
      y2={endY}
      strokeWidth={markerWidth}
      stroke="#38858a"
    />
  );
});

const Clock = () => {
  const [seconds, setSeconds] = useState<number>(d.getSeconds());
  const [minutes, setMinutes] = useState<number>(d.getMinutes());
  const [hour, setHour] = useState<number>(d.getHours() % 12);
  const [meridiem, setMeridiem] = useState<string>(
    d.getHours() > 12 ? "PM" : "AM"
  );
  const [date, setDate] = useState(formatter.format(d));

  useEffect(() => {
    const interval = setInterval(() => {
      const d = new Date();
      setSeconds(d.getSeconds());
      setMinutes(d.getMinutes());
      setHour(d.getHours() % 12);
      setMeridiem(d.getHours() > 12 ? "PM" : "AM");
      setDate(formatter.format(d));
    }, 1000);

    return () => {
      clearInterval(interval);
    };
  }, []);
  return (
    <div className="flex flex-col items-center gap-8">
      <h1 className="challenge-heading">Clock</h1>
      <div className="w-80 h-80 relative shadow-[0_0_50px_0_rgba(0,0,0,0.3)] border border-background-700 rounded-full flex items-center justify-center">
        <svg width={size} height={size} className="absolute inset-0 z-[0]">
          {markers}
        </svg>
        <div className="w-5 h-5 bg-primary-500 rounded-full" />
        <div
          style={{
            rotate: `${seconds * 6}deg`,
          }}
          className="z-[-1] h-36 w-[5px] bg-primary-600 rounded-full absolute top-4 origin-bottom"
        />
        <div
          style={{
            rotate: `${minutes * 6}deg`,
          }}
          className="z-[-1] h-36 w-2 bg-gray-600 rounded-full absolute top-4 origin-bottom"
        />
        <div
          style={{
            rotate: `${hour * 30}deg`,
          }}
          className="z-[-1] h-20 w-2 bg-gray-600 rounded-full absolute top-20 origin-bottom"
        />
      </div>

      <div className="flex flex-col items-center gap-2">
        <div className="flex items-center text-6xl font-bold">
          <span>{hour > 9 ? hour : `0${hour}`}</span>
          <span>:{minutes > 9 ? minutes : `0${minutes}`}</span>
          <span>:{seconds > 9 ? seconds : `0${seconds}`}</span>
          <span className="text-2xl ml-2 mb-auto"> {meridiem}</span>
        </div>
        <p className="text-2xl font-semibold">{date}</p>
      </div>
    </div>
  );
};

export default Clock;
